#!/usr/bin/env -Ssml --script

fun eatuntilnewline (fname) (instream : TextIO.instream): bool =
  let
    val c = TextIO.input1 instream
  in
    case TextIO.lookahead instream of
          SOME #"\n" => ( 
            (* Backend.Interact.useScriptFile (fname, instream); *)
            true )
        | SOME c => eatuntilnewline fname instream
        | NONE => false
  end

fun checkSharpbang (fname) (instream : TextIO.instream): bool =
  let
    val c = TextIO.input1 instream
  in
   case c of
      SOME #"#" => (
        case TextIO.lookahead instream of
          SOME #"!" => eatuntilnewline fname instream
        | SOME c => checkSharpbang fname instream
        | NONE => false
        )
    | SOME c => checkSharpbang fname instream
    | NONE => false
  end

fun pf fname = 
let
  val stream = TextIO.openIn fname
  val isscript = checkSharpbang fname stream
in
  if (isscript) = false  
  then 
    (print "!* Script file doesn't start with #!. \n")
  else
    ( Backend.Interact.useScriptFile (fname, stream) )
end

val () = pf "exml0";
